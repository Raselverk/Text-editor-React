{"version":3,"sources":["TitleComponent.js","DisplayComponent.js","ButtonComponent.js","EditComponent.js","StyleComponent.js","App.js","serviceWorker.js","index.js"],"names":["TitleComponent","react_default","a","createElement","className","class","Component","DisplayComponent","style","fontSize","this","props","fontFamily","fontName","fontWeight","par","ButtonComponent","onClick","toTextarea","safer","EditComponent","value","textarea","onChange","changer","StyleComponent","fontSizeChange","type","name","fontFamilyChange","fontBoldChange","defaultChecked","FontNormalChange","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","fontBold","fontNormal","setState","e","target","react","src_TitleComponent_0","src_DisplayComponent_0","src_ButtonComponent_0","bind","src_EditComponent_0","src_StyleComponent_0","fontNormalChange","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd89ba26.chunk.js","sourcesContent":["import  React,{  Component } from 'react';\nimport './TitleComponent.css';\n\n\nclass TitleComponent extends Component {\n   render() {\n    return (\n        <div className=\"titleBlock\">\n            <h1>Text Editor React<i class=\"fab fa-react\"></i></h1>\n            <h2>dfdsfdsf</h2>\n        </div>\n        \n    );\n }\n}\n\nexport default TitleComponent;","import  React,{ Component } from 'react';\nimport './DisplayComponent.css';\n\nclass DisplayComponent extends Component {\n   render() {\n     return (\n\t\t\t<div className=\"DisplayBlock\">\n                 <p className=\"DisplayComponentP\"\n                    style = {{fontSize: this.props.fontSize, \n                              fontFamily: this.props.fontName,\n                              fontWeight: this.props.fontWeight}}>\n                      {this.props.par}\n                 </p>\n            </div>\n        \t);\n }\n}\n\nexport default DisplayComponent;","import  React, {  Component } from 'react';\nimport './ButtonComponent.css';\n\nclass ButtonComponent extends Component {\n   render() {\n     return (\n\t\t\t<div className=\"ButtonBlock\">\n                 <button onClick={this.props.toTextarea}>Edit</button>\n                 <button>Style</button> \n                 <button onClick={this.props.safer}>Safe</button> \n                 <button>Add</button>  \n                 <button>Block</button>  \n              </div>\n\t\t\n        \t);\n }\n}\n\nexport default ButtonComponent;","import  React, { Component } from 'react';\nimport './EditComponent.css';\n\nclass EditComponent extends Component {\n   render() {\n     return (\n\t\t\t<div className=\"EditBlock\">\n                  <textarea value={this.props.textarea} onChange={this.props.changer}></textarea>\n              </div>\n        \t);\n }\n}\n\nexport default EditComponent;","import  React,{  Component } from 'react';\nimport './StyleComponent.css';\n\n\nclass StyleComponent extends Component {\n   render() {\n     return (\n\t\t\t<div className=\"StyleBlock\">\n                <form>\n        \t\t\t<div className=\"radio\">\n        \t\t\t    <label >\n        \t\t\t    \tText Size:\n\t\t          \t\t\t\t<label>\n\t\t          \t\t\t\t  12pt\n\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t  onClick={this.props.fontSizeChange}\n\t\t            \t\t\t\t\ttype=\"radio\"\n\t\t            \t\t\t\t\tvalue=\"12pt\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"textSize\" \n\t\t            \t\t\t\t\t/>\n\t\t          \t\t\t\t</label>\n\n\t\t          \t\t\t\t<label>\n\t\t          \t\t\t\t  14pt\n\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.fontSizeChange}\n\t\t            \t\t\t\t\ttype=\"radio\" \n\t\t            \t\t\t\t\tvalue=\"14pt\"\n\t\t            \t\t\t\t\tname=\"textSize\"/>\n\t\t\t\t\t          \t</label>\n\n\t\t\t\t\t          \t<label>\n\t\t\t\t\t          \t   16pt\n\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t  onClick={this.props.fontSizeChange}\n\t\t            \t\t\t\t \ttype=\"radio\"\n\t\t            \t\t\t\t \tvalue=\"16pt\" \n\t\t            \t\t\t\t \tname=\"textSize\"/>\n\t\t          \t\t\t\t</label>\n\n\t\t          \t\t\t\t<label>\n\t\t          \t\t\t\t    18pt\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.fontSizeChange}\n\t\t            \t\t\t\t  \ttype=\"radio\" \n\t\t            \t\t\t\t  \tvalue=\"18pt\" \n\t\t            \t\t\t\t  \tname=\"textSize\"/>\n\t\t          \t\t\t\t</label>\n          \t\t\t\t </label>\n        \t\t\t</div>\n\n        \t\t\t<label>\n          \t\t\t\t\tFont Family: \n          \t\t\t\t\t<select >\n            \t\t\t\t\t<option onClick={this.props.fontFamilyChange} value=\"Tahoma\">Tahoma</option>\n            \t\t\t\t\t<option onClick={this.props.fontFamilyChange} value=\"Vernada\">Vernada</option>\n         \t\t\t\t\t\t<option onClick={this.props.fontFamilyChange} value=\"Times new roman\">Times new roman</option>\n             \t\t\t\t </select>\n        \t\t\t</label>\n        \t\t</form>\n\n        \t\t<form>\n\n        \t\t\t<label>\n          \t\t\t\tBold\n\t\t\t\t          <input\n\t\t\t\t\t\t    onChange = {this.props.fontBoldChange}\n\t\t\t\t\t\t    defaultChecked = {this.props.FontNormalChange}\n\t\t\t\t            name=\"bold\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tvalue=\"normal\" />\n        \t\t\t</label>\n\n        \t\t\t<label>\n          \t\t\t\tItalic\n\t\t\t\t          <input\n\t\t\t\t            name=\"italic\"\n\t\t\t\t            type=\"checkbox\" />\n        \t\t\t</label>\n\n        \t\t\t<label>\n          \t\t\t\tUnderline\n\t\t\t\t          <input\n\t\t\t\t            name=\"underline\"\n\t\t\t\t            type=\"checkbox\" />\n        \t\t\t</label>\n        \t\t</form>\n\n      \t\t\t\n             </div>\n        \t);\n }\n}\n\nexport default StyleComponent;","import { React,  Component } from 'react';\nimport './App.css';\nimport TitleComponent from './TitleComponent.js';\nimport DisplayComponent from './DisplayComponent.js';\nimport ButtonComponent from './ButtonComponent.js';\nimport EditComponent from './EditComponent.js';\nimport StyleComponent from './StyleComponent.js';\n  \n\nclass App extends Component {\n constructor(props){\n\tsuper(props);\n\tthis.state = {\n\t\tpar: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\" ,\n\t\ttextarea: '',\n    fontSize: '',\n    fontName: '',\n    fontBold: 'bold',\n    fontNormal: 'normal',\n    fontWeight: 'normal'\n    };\n  }\n\n  toTextarea(){\n    this.setState({\n      textarea: this.state.par\n    });\n  }\n\n  changer(e){\n    this.setState({\n      par: e.target.value,\n      textarea: e.target.value\n    });\n  }\n\n  safer(){\n    this.setState({\n      textarea: ''\n    });\n  }\n  fontSizeChange(e){\n    this.setState({\n      fontSize: e.target.value\n    });\n  }\n  fontFamilyChange(e){\n    this.setState({\n      fontName: e.target.value\n    });\n  }\n  fontBoldChange(){\n     this.setState({\n      fontBold: \"bold\"\n    });\n  }\n   fontNormalChange(){\n       this.setState({\n      fontBold: \"normal\"\n    });\n  }\n  \n  \n\n   render() {\n     return (\n      <div className=\"TextEditor\">\n            <TitleComponent/>\n        \n            <DisplayComponent\n                par = {this.state.par}\n                fontSize = {this.state.fontSize}\n                fontFamily = {this.state.fontName}\n                fontWeight = {this.state.fontWeight}\n            />\n\n            <ButtonComponent\n              toTextarea = {this.toTextarea.bind(this)}\n              safer = {this.safer.bind(this)}\n            />\n\n            <EditComponent \n                textarea = {this.state.textarea}\n                changer = {this.changer.bind(this)}\n            />  \n            <StyleComponent\n               fontSize = {this.state.fontSize}\n               fontSizeChange = {this.fontSizeChange.bind(this)}\n               fontName = {this.state.fontName}\n               fontFamilyChange = {this.fontFamilyChange.bind(this)}  \n               fontBoldChange = {this.fontBoldChange.bind(this)} \n               fontNormalChange = {this.fontNormalChange.bind(this)} \n            />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}